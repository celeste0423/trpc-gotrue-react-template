{"version":3,"sources":["../src/server.ts"],"sourcesContent":["import 'dotenv/config'\r\nimport 'reflect-metadata'\r\n\r\nimport { TRPCError } from '@trpc/server'\r\nimport { fastifyTRPCPlugin } from '@trpc/server/adapters/fastify'\r\n\r\nimport fastifyCORS from '@fastify/cors'\r\nimport fastify from 'fastify'\r\n\r\n// import notificationService from '@/integrations/notifications'\r\nimport appRouter from './app'\r\nimport createContext from './context'\r\n\r\n//fastifyServer객체 생성, 허용하는 URL매개변수의 최대 길이 설정\r\nexport const fastifyServer = fastify({\r\n\tmaxParamLength: 5000,\r\n\t// logger: true,\r\n})\r\n\r\n//cors에서 모든 origin 허용\r\nfastifyServer.register(fastifyCORS, {\r\n\t//orign함수는 cors설정하는데 이용됨 : 모든 출처에서의 요청을 허용하도록 설정\r\n\t//cors정책을 완화하여 다른 도메인에서의 클라이언트 요청을 허용함\r\n\torigin: (origin, callback) => {\r\n\t\t//callback함수 : (에러, 허용여부)를 담아서 보냄\r\n\t\t// if (!origin) return callback(null, true)\r\n\t\treturn callback(null, true)\r\n\t},\r\n})\r\n\r\nfastifyServer.register(fastifyTRPCPlugin, {\r\n\ttrpcOptions: {\r\n\t\trouter: appRouter,\r\n\t\tcreateContext,\r\n\t\tonError: ({ error }: { error: TRPCError }) => {\r\n\t\t\t//^?\r\n\t\t\tconsole.log(error)\r\n\t\t},\r\n\t},\r\n})\r\n"],"names":["fastifyServer","fastify","maxParamLength","register","fastifyCORS","origin","callback","fastifyTRPCPlugin","trpcOptions","router","appRouter","createContext","onError","error","console","log"],"mappings":";;;;+BAcaA;;;eAAAA;;;QAdN;QACA;yBAG2B;6DAEV;iEACJ;4DAGE;gEACI;;;;;;AAGnB,MAAMA,gBAAgBC,IAAAA,iBAAO,EAAC;IACpCC,gBAAgB;AAEjB;AAEA,qBAAqB;AACrBF,cAAcG,QAAQ,CAACC,aAAW,EAAE;IACnC,gDAAgD;IAChD,sCAAsC;IACtCC,QAAQ,CAACA,QAAQC;QAChB,iCAAiC;QACjC,2CAA2C;QAC3C,OAAOA,SAAS,MAAM;IACvB;AACD;AAEAN,cAAcG,QAAQ,CAACI,0BAAiB,EAAE;IACzCC,aAAa;QACZC,QAAQC,YAAS;QACjBC,eAAAA,gBAAa;QACbC,SAAS,CAAC,EAAEC,KAAK,EAAwB;YACxC,IAAI;YACJC,QAAQC,GAAG,CAACF;QACb;IACD;AACD"}