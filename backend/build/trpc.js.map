{"version":3,"sources":["../src/trpc.ts"],"sourcesContent":["import { initTRPC, TRPCError } from '@trpc/server'\n\nimport { Context } from './context'\n\n// You can use any variable name you like.\n// We use t to keep things simple.\nconst t = initTRPC.context<Context>().create()\n\nexport const router = t.router\nexport const mergeRouters = t.mergeRouters\nexport const middleware = t.middleware\n\nexport const publicProcedure = t.procedure\n\nexport const userProcedure = t.procedure.use(\n\tt.middleware(({ next, ctx }) => {\n\t\tconst { jwt, userAuthClient } = ctx\n\n\t\tif (!jwt || !userAuthClient) {\n\t\t\tthrow new TRPCError({\n\t\t\t\tcode: 'UNAUTHORIZED',\n\t\t\t})\n\t\t}\n\t\treturn next({\n\t\t\tctx: {\n\t\t\t\tjwt,\n\t\t\t\tuserAuthClient,\n\t\t\t},\n\t\t})\n\t}),\n)\n"],"names":["mergeRouters","middleware","publicProcedure","router","userProcedure","t","initTRPC","context","create","procedure","use","next","ctx","jwt","userAuthClient","TRPCError","code"],"mappings":";;;;;;;;;;;IASaA,YAAY;eAAZA;;IACAC,UAAU;eAAVA;;IAEAC,eAAe;eAAfA;;IAJAC,MAAM;eAANA;;IAMAC,aAAa;eAAbA;;;wBAduB;AAIpC,0CAA0C;AAC1C,kCAAkC;AAClC,MAAMC,IAAIC,gBAAQ,CAACC,OAAO,GAAYC,MAAM;AAErC,MAAML,SAASE,EAAEF,MAAM;AACvB,MAAMH,eAAeK,EAAEL,YAAY;AACnC,MAAMC,aAAaI,EAAEJ,UAAU;AAE/B,MAAMC,kBAAkBG,EAAEI,SAAS;AAEnC,MAAML,gBAAgBC,EAAEI,SAAS,CAACC,GAAG,CAC3CL,EAAEJ,UAAU,CAAC,CAAC,EAAEU,IAAI,EAAEC,GAAG,EAAE;IAC1B,MAAM,EAAEC,GAAG,EAAEC,cAAc,EAAE,GAAGF;IAEhC,IAAI,CAACC,OAAO,CAACC,gBAAgB;QAC5B,MAAM,IAAIC,iBAAS,CAAC;YACnBC,MAAM;QACP;IACD;IACA,OAAOL,KAAK;QACXC,KAAK;YACJC;YACAC;QACD;IACD;AACD"}