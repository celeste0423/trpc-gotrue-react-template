{"version":3,"sources":["../../../../src/routes/user/sample/sample.route.ts"],"sourcesContent":["import { z } from 'zod'\r\n\r\nimport { router, userProcedure } from '@/trpc'\r\n\r\nconst keyPhraseRoute = router({\r\n\tsampleRoute: userProcedure\r\n\t\t.input(\r\n\t\t\tz.object({\r\n\t\t\t\tsample: z.string(),\r\n\t\t\t}),\r\n\t\t)\r\n\t\t.query(async ({ input: { sample }, ctx: { datasource, jwt } }) => {\r\n\t\t\tif (sample == 'email') {\r\n\t\t\t\treturn '이메일은 ' + jwt.email\r\n\t\t\t} else if (sample == 'sub') {\r\n\t\t\t\treturn '토큰은 ' + jwt.sub\r\n\t\t\t} else {\r\n\t\t\t\treturn '입력값이 없습니다'\r\n\t\t\t}\r\n\r\n\t\t\t// return (\r\n\t\t\t// \t'Hello World(sample route)' +\r\n\t\t\t// \t' ' +\r\n\t\t\t// \tsample +\r\n\t\t\t// \t' ' +\r\n\t\t\t// \tjwt.sub +\r\n\t\t\t// \t'\\n' +\r\n\t\t\t// \tjwt.email +\r\n\t\t\t// \t'\\n' +\r\n\t\t\t// \tjwt.role\r\n\t\t\t// )\r\n\t\t}),\r\n})\r\nexport default keyPhraseRoute\r\n"],"names":["keyPhraseRoute","router","sampleRoute","userProcedure","input","z","object","sample","string","query","ctx","datasource","jwt","email","sub"],"mappings":";;;;+BAiCA;;;eAAA;;;qBAjCkB;sBAEoB;AAEtC,MAAMA,iBAAiBC,IAAAA,YAAM,EAAC;IAC7BC,aAAaC,mBAAa,CACxBC,KAAK,CACLC,MAAC,CAACC,MAAM,CAAC;QACRC,QAAQF,MAAC,CAACG,MAAM;IACjB,IAEAC,KAAK,CAAC,OAAO,EAAEL,OAAO,EAAEG,MAAM,EAAE,EAAEG,KAAK,EAAEC,UAAU,EAAEC,GAAG,EAAE,EAAE;QAC5D,IAAIL,UAAU,SAAS;YACtB,OAAO,UAAUK,IAAIC,KAAK;QAC3B,OAAO,IAAIN,UAAU,OAAO;YAC3B,OAAO,SAASK,IAAIE,GAAG;QACxB,OAAO;YACN,OAAO;QACR;IAEA,WAAW;IACX,iCAAiC;IACjC,SAAS;IACT,YAAY;IACZ,SAAS;IACT,aAAa;IACb,UAAU;IACV,eAAe;IACf,UAAU;IACV,YAAY;IACZ,IAAI;IACL;AACF;MACA,WAAed"}