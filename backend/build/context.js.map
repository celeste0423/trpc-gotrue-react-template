{"version":3,"sources":["../src/context.ts"],"sourcesContent":["import type { inferAsyncReturnType } from '@trpc/server'\nimport type { CreateFastifyContextOptions } from '@trpc/server/adapters/fastify'\nimport type { CreateWSSContextFnOptions } from '@trpc/server/adapters/ws'\n\nimport { GoTrueClient } from '@supabase/gotrue-js'\nimport jwt from 'jsonwebtoken'\n\nimport { createUserAuthClient } from './auth'\nimport { MBDataSource } from './datasource'\n\ntype JWTPayload = {\n\taud: string\n\texp: number\n\tsub: string\n\temail: string\n\tphone: string\n\tapp_metadata: any // TODO: define\n\tuser_metadata: any // TODO: define\n\trole: string\n\taal: string\n\tamr: {\n\t\tmethod: string\n\t\ttimestamp: number\n\t}[]\n\tsession_id: string\n\taccessToken: string\n}\n\nconst createContext = async (\n\toptions: CreateFastifyContextOptions | CreateWSSContextFnOptions,\n) => {\n\tconst datasource = MBDataSource\n\tif (!datasource.isInitialized) {\n\t\tawait datasource.initialize()\n\t}\n\n\tconst authorization = options.req.headers.authorization\n\tconst accessToken = authorization?.match(/Bearer (.+)/)?.[1]\n\ttry {\n\t\tif (!accessToken) {\n\t\t\tthrow new Error('token does not exist')\n\t\t}\n\n\t\tconst token: JWTPayload = jwt.verify(\n\t\t\taccessToken,\n\t\t\tprocess.env.GOTRUE_JWT_SECRET!,\n\t\t) as JWTPayload\n\n\t\tif (token.role === 'revenuecat_admin') {\n\t\t\treturn {\n\t\t\t\tdatasource,\n\t\t\t\t// @ts-ignore\n\t\t\t\tuserAuthClient: null as GoTrueClient,\n\n\t\t\t\tjwt: { ...token, accessToken },\n\t\t\t}\n\t\t} else {\n\t\t\tconst userAuthClient = createUserAuthClient(accessToken)\n\n\t\t\treturn {\n\t\t\t\tdatasource,\n\t\t\t\tuserAuthClient,\n\t\t\t\tjwt: token,\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\treturn {\n\t\t\tdatasource,\n\t\t}\n\t}\n}\n\nexport type Context = inferAsyncReturnType<typeof createContext>\n\nexport default createContext\n"],"names":["createContext","options","datasource","MBDataSource","isInitialized","initialize","authorization","req","headers","accessToken","match","Error","token","jwt","verify","process","env","GOTRUE_JWT_SECRET","role","userAuthClient","createUserAuthClient","error"],"mappings":";;;;+BA0EA;;;eAAA;;;qEArEgB;sBAEqB;4BACR;;;;;;AAoB7B,MAAMA,gBAAgB,OACrBC;IAEA,MAAMC,aAAaC,wBAAY;IAC/B,IAAI,CAACD,WAAWE,aAAa,EAAE;QAC9B,MAAMF,WAAWG,UAAU;IAC5B;IAEA,MAAMC,gBAAgBL,QAAQM,GAAG,CAACC,OAAO,CAACF,aAAa;IACvD,MAAMG,cAAcH,eAAeI,MAAM,gBAAgB,CAAC,EAAE;IAC5D,IAAI;QACH,IAAI,CAACD,aAAa;YACjB,MAAM,IAAIE,MAAM;QACjB;QAEA,MAAMC,QAAoBC,qBAAG,CAACC,MAAM,CACnCL,aACAM,QAAQC,GAAG,CAACC,iBAAiB;QAG9B,IAAIL,MAAMM,IAAI,KAAK,oBAAoB;YACtC,OAAO;gBACNhB;gBACA,aAAa;gBACbiB,gBAAgB;gBAEhBN,KAAK;oBAAE,GAAGD,KAAK;oBAAEH;gBAAY;YAC9B;QACD,OAAO;YACN,MAAMU,iBAAiBC,IAAAA,0BAAoB,EAACX;YAE5C,OAAO;gBACNP;gBACAiB;gBACAN,KAAKD;YACN;QACD;IACD,EAAE,OAAOS,OAAO;QACf,OAAO;YACNnB;QACD;IACD;AACD;MAIA,WAAeF"}